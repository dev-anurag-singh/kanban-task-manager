generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  
  type               String
  provider           String
  providerAccountId  String  
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? 
  image         String?
  password      String?
  
  accounts      Account[]
 
  @@map("users")
}

model Board {
  id          String    @id @default(cuid())
  name        String
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  columns     Column[]
  tasks       Task[]
}

model Column {
  id          String   @id @default(cuid())
  name        String
  order       Int   
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  boardId     String
  board       Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)

  tasks       Task[]
}

model Task {
  id            String   @id @default(cuid())
  title         String
  description   String?
  order         Int   
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  columnId      String
  column        Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
  boardId     String
  board       Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
}